Дайыржанова Диана ИС231(4)     
Week5
Вариант 1
using System;

public class BankAccount
{
    // Свойство для номера счета
    public string AccountNumber { get; private set; }

    // Свойство для баланса счета
    public decimal Balance { get; private set; }

    // Свойство для имени владельца счета
    public string Owner { get; private set; }

    // Конструктор класса, который принимает номер счета и владельца
    // Баланс по умолчанию устанавливается в 0
    public BankAccount(string accountNumber, string owner)
    {
        AccountNumber = accountNumber; // Устанавливаем номер счета
        Owner = owner; // Устанавливаем владельца счета
        Balance = 0; // Изначальный баланс равен 0
    }

    // Метод для пополнения баланса
    public void Deposit(decimal amount)
    {
        if (amount > 0) // Проверяем, что сумма для пополнения положительная
        {
            Balance += amount; // Увеличиваем баланс на сумму депозита
        }
        else
        {
            throw new ArgumentException("The deposit amount must be greater than 0."); // Выбрасываем исключение, если сумма отрицательная
        }
    }

    // Метод для снятия денег со счета
    public void Withdraw(decimal amount)
    {
        if (amount > 0 && amount <= Balance) // Проверяем, что сумма положительна и не превышает баланс
        {
            Balance -= amount; // Уменьшаем баланс на сумму снятия
        }
        else if (amount > Balance) // Если сумма больше, чем баланс
        {
            throw new InvalidOperationException("Insufficient funds to withdraw."); // Выбрасываем исключение
        }
        else
        {
            throw new ArgumentException("The withdrawal amount must be greater than 0."); // Выбрасываем исключение для отрицательных сумм
        }
    }

    // Метод для получения информации о счете
    public string GetAccountInfo()
    {
        // Возвращаем строку с информацией о счете
        return $"Account number: {AccountNumber}, Owner: {Owner}, Balance: {Balance:C}";
    }

    // Метод для перевода средств с одного счета на другой
    public void Transfer(BankAccount targetAccount, decimal amount)
    {
        if (targetAccount == null) // Проверяем, что целевой счет не null
        {
            throw new ArgumentNullException(nameof(targetAccount), "The target account cannot be empty.");
        }

        // Вызываем метод Withdraw для списания суммы с текущего счета
        this.Withdraw(amount);
        
        // Вызываем метод Deposit для пополнения целевого счета
        targetAccount.Deposit(amount);
    }
}